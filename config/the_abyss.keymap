#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC>;
};

#define BAS 0
#define GA1 1
#define GA2 2
#define GA3 3
#define MOU 4
#define NUM 5
#define FUN 6
#define SYM 7
#define NAV 8

/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────╮ 30  31  32 │ │ 33  34  35 ╭───────╯
          ╰────────────╯ ╰────────────╯        */

/ {
    behaviors {
        hms: homerow_mod_strict {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD_STRICT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            bindings = <&kp>, <&kp>;
        };

        lhm: left_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MOD";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 10 11 12 13 15 16 17 18 19 25 26 27 28 29 30 31 32 33 34 35>;
        };

        lhl: left_homerow_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_LAYER";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 10 11 12 13 15 16 17 18 19 25 26 27 28 29 30 31 32 33 34 35>;
        };

        rhm: right_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MOD";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 16 17 18 19 20 21 22 23 24 30 31 32 33 34 35>;
        };

        rhl: right_homerow_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_LAYER";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 16 17 18 19 20 21 22 23 24 30 31 32 33 34 35>;
        };

        tm: thumb_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_MOD";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        tl: thumb_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LAYER";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        bt_sel: tap_dance_bluetooth_select {
            compatible = "zmk,behavior-tap-dance";
            label = "Bluetooth Select";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&bt BT_SEL 0>, <&bt BT_SEL 1>, <&bt BT_SEL 2>, <&bt BT_SEL 3>, <&bt BT_SEL 4>;
        };

        f1_: tap_dance_f1_ {
            compatible = "zmk,behavior-tap-dance";
            label = "F1 to F24";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp F1>, <&kp F2>, <&kp F3>, <&kp F4>,
                       <&kp F5>, <&kp F6>, <&kp F7>, <&kp F8>,
                       <&kp F9>, <&kp F10>, <&kp F11>, <&kp F12>,
                       <&kp F13>, <&kp F14>, <&kp F15>, <&kp F16>,
                       <&kp F17>, <&kp F18>, <&kp F19>, <&kp F20>,
                       <&kp F22>, <&kp F23>, <&kp F24>;
        };

        f5_: tap_dance_f5_ {
            compatible = "zmk,behavior-tap-dance";
            label = "F5 to F24";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F5>, <&kp F6>, <&kp F7>, <&kp F8>,
                       <&kp F9>, <&kp F10>, <&kp F11>, <&kp F12>,
                       <&kp F13>, <&kp F14>, <&kp F15>, <&kp F16>,
                       <&kp F17>, <&kp F18>, <&kp F19>, <&kp F20>,
                       <&kp F22>, <&kp F23>, <&kp F24>;
        };

        f9_: tap_dance_f9_ {
            compatible = "zmk,behavior-tap-dance";
            label = "F9 to F24";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F9>, <&kp F10>, <&kp F11>, <&kp F12>,
                       <&kp F13>, <&kp F14>, <&kp F15>, <&kp F16>,
                       <&kp F17>, <&kp F18>, <&kp F19>, <&kp F20>,
                       <&kp F22>, <&kp F23>, <&kp F24>;
        };

        media: tap_dance_media {
            compatible = "zmk,behavior-tap-dance";
            label = "Media";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        ltg: layer_tap_game {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_GAME";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <160>;
            bindings = <&mo>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Shortcut
        #define COMBO(NAME, BINDINGS, KEYPOS, TIMEOUT) \
            combo_##NAME { \
                timeout-ms = <TIMEOUT>; \
                bindings = <BINDINGS>; \
                key-positions = <KEYPOS>; \
            };

        #define COMBO_L(NAME, BINDINGS, KEYPOS, TIMEOUT, LAYERS) \
            combo_##NAME { \
                timeout-ms = <TIMEOUT>; \
                bindings = <BINDINGS>; \
                key-positions = <KEYPOS>; \
                layers = <LAYERS>; \
            };

        COMBO(caps_word, &caps_word, 31 34, 80)

        COMBO_L(reset_left, &sys_reset, 21 22 23, 50, BAS)
        COMBO_L(reset_right, &sys_reset, 26 27 28, 50, BAS)
        COMBO_L(bootloader_left, &bootloader, 20 21 22 23, 50, BAS)
        COMBO_L(bootloader_right, &bootloader, 26 27 28 29, 50, BAS)
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
                &kp Q       &kp W       &kp E      &kp R         &kp T         /* */ &kp Y        &kp U           &kp I      &kp O       &kp P
                &hms LGUI A &lhm LALT S &lhl NUM D &lhm LCTL F   &lhm LSFT G   /* */ &rhm RSFT H  &rhm RCTL J     &rhl SYM K &rhm RALT L &hms RGUI SEMI
                &kp Z       &kp X       &kp C      &kp V         &kp B         /* */ &kp N        &kp M           &kp COMMA  &kp DOT     &kp SLASH
                                        &kp TAB    &tm LSHFT ESC &tl FUN SPACE /* */ &tl NAV BSPC &tm RSHFT ENTER &kp APOS
            >;
        };

        game1_layer {
            label = "Game 1";
            bindings = <
                &kp Q     &kp W     &kp E    &kp R       &kp T     /* */ &kp Y    &kp U          &kp I     &kp O     &kp P
                &kp A     &kp S     &kp D    &kp F       &kp G     /* */ &kp H    &kp J          &kp K     &kp L     &kp SEMI
                &kp Z     &kp X     &kp C    &kp V       &kp B     /* */ &kp N    &kp M          &kp COMMA &kp DOT   &kp SLASH
                                    &kp LCTL &lt GA2 ESC &kp SPACE /* */ &kp BSPC &mt RSHFT BSPC &kp APOS
            >;
        };

        game2_layer {
            label = "Game 2";
            bindings = <
                &kp LCTL &kp N1 &trans  &kp N2 &kp TAB   /* */ &trans &trans &trans &trans &trans
                &kp LSFT &trans &trans  &trans &kp N3    /* */ &trans &trans &trans &trans &trans
                &kp LALT &kp N5 &sl GA3 &kp N4 &kp GRAVE /* */ &trans &trans &trans &trans &trans
                                &trans  &trans &trans    /* */ &trans &trans &trans
            >;
        };

        game3_layer {
            label = "Game 3";
            bindings = <
                &trans &trans        &trans   &trans &trans  /* */ &trans &trans &trans &trans &trans
                &trans &kp LS(F2)    &trans   &kp F2 &to BAS /* */ &trans &trans &trans &trans &trans
                &trans &kp LG(LS(S)) &kp LGUI &f1_   &trans  /* */ &trans &trans &trans &trans &trans
                                     &trans   &trans &trans  /* */ &trans &trans &trans
            >;
        };

        // No mouse support in ZMK yet
        mouse_layer {
            label = "Mouse";
            bindings = <
                &trans &trans &trans &trans &trans /* */ &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans /* */ &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans /* */ &trans &trans &trans &trans &trans
                              &trans &trans &trans /* */ &trans &trans &trans
            >;
        };

        number_pad_layer {
            label = "Numbers";
            bindings = <
                &trans &trans &trans &trans &trans /* */ &kp PLUS  &kp N7 &kp N8 &kp N9 &kp STAR
                &trans &trans &trans &trans &trans /* */ &kp EQUAL &kp N4 &kp N5 &kp N6 &kp DOT
                &trans &trans &trans &trans &trans /* */ &kp MINUS &kp N1 &kp N2 &kp N3 &kp SLASH
                              &trans &trans &trans /* */ &trans    &kp N0 &trans
            >;
        };

        function_layer {
            label = "Functions";
            bindings = <
                &trans &trans &trans &trans &trans  /* */ &kp C_MUTE &kp PSCRN     &kp PAUSE_BREAK &kp KP_NUMLOCK  &kp C_VOL_UP
                &trans &trans &trans &trans &to GA1 /* */ &bt BT_CLR &f1_          &f5_            &f9_            &media
                &trans &trans &trans &trans &trans  /* */ &bt_sel    &kp LG(LS(S)) &kp LG(L)       &kp LC(LS(ESC)) &kp C_VOL_DN
                              &trans &trans &trans  /* */ &trans     &trans        &trans
            >;
        };

        symbol_layer {
            label = "Symbols";
            bindings = <
                &trans        &kp SQT   &kp LBKT &kp RBKT &trans /* */ &trans  &trans &trans &trans &trans
                &kp GRAVE     &kp UNDER &kp LPAR &kp RPAR &trans /* */ &trans  &trans &trans &trans &trans
                &kp BACKSLASH &kp DQT   &kp LBRC &kp RBRC &trans /* */ &trans  &trans &trans &trans &trans
                                        &trans   &trans   &trans /* */ &kp DEL &trans &trans
            >;
        };

        nav_layer {
            label = "Navigation";
            bindings = <
                &kp INS &kp HOME &kp UP   &kp END   &trans    /* */ &trans &trans &trans &trans &trans
                &kp TAB &kp LEFT &kp DOWN &kp RIGHT &kp PG_UP /* */ &trans &trans &trans &trans &trans
                &kp DEL &trans   &trans   &trans    &kp PG_DN /* */ &trans &trans &trans &trans &trans
                                 &trans   &trans    &trans    /* */ &trans &trans &trans
            >;
        };
    };
};
